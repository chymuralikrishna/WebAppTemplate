CREATE TABLE Users (
  user_id INT NOT NULL AUTO_INCREMENT,
  username VARCHAR(50) NOT NULL,
  password VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (user_id)
);
CREATE TABLE Roles (
  role_id INT NOT NULL AUTO_INCREMENT,
  role_name VARCHAR(50) NOT NULL,
  PRIMARY KEY (role_id)
);
CREATE TABLE User_Roles_Mapping (
  user_role_mapping_id INT NOT NULL AUTO_INCREMENT,
  user_id INT NOT NULL,
  role_id INT NOT NULL,
  PRIMARY KEY (user_role_mapping_id),
  FOREIGN KEY (user_id) REFERENCES Users(user_id),
  FOREIGN KEY (role_id) REFERENCES Roles(role_id)
);
CREATE TABLE Components (
  component_id INT NOT NULL AUTO_INCREMENT,
  component_name VARCHAR(50) NOT NULL,
  component_link VARCHAR(200) NOT NULL,
  parent_component_id INT,
  PRIMARY KEY (component_id),
  FOREIGN KEY (parent_component_id) REFERENCES Components(component_id)
);
CREATE TABLE Component_Roles_Mapping (
  component_role_mapping_id INT NOT NULL AUTO_INCREMENT,
  component_id INT NOT NULL,
  role_id INT NOT NULL,
  PRIMARY KEY (component_role_mapping_id),
  FOREIGN KEY (component_id) REFERENCES Components(component_id),
  FOREIGN KEY (role_id) REFERENCES Roles(role_id)
);
